¿QUIEN INVENTO EL SISTEMA DE CONTROL DE VERSION GIT Y POR QUE?
Git es un sistema de control de versiones distribuido que, 
como ya hemos introducido, fue creado por Linus Torvalds en 2005 
para ser utilizado en el desarrollo del kernel de Linux. Git es 
un software escrito en C, con interfaz por lí­nea de comandos, 
disponible para Windows, MacOS X y GNU/Linux. En la actualidad, 
existen además multitud de clientes gráficos y herramientas basadas 
en git.
Originalmente, la comunidad de desarrolladores de Linux utilizaba 
BitKeeper, un sistema de control de versiones distribuido y comercial, 
aunque gratuito para proyectos de código abierto. Como el propio 
Linus Torvalds explica, BitKeeper suponí­a un gran paso adelante 
comparado con otros SCMs como CVS y Subversion y, sin duda, inspiró muchos 
de los conceptos en los que se basa git (especialmente el ser un sistema distribuido).

Sin embargo, el hecho de ser un software propietario y ciertas desavenencias 
con su creador, Larry McVoy, llevaron a Linus Torvalds a decantarse por 
buscar un nuevo sistema de control de versiones. Tras probar muchas de las 
soluciones existentes y descubrir que ninguna cumplí­a con sus requisitos, 
Torvalds decidió diseñar e implementar su propio sistema de control de versiones. 
Tan sólo un dí­a después ya habí­a desarrollado las bases de git para poder 
auto-gestionar el propio código de git en git y, una semana después, 
ya tení­a una primera versión. Resulta curioso que en la primera mención 
pública de git, cuando llevaba un par de dí­as de desarrollo, 
Torvalds describe git no como un sistema de control de versiones 
sino simplemente como una herramienta de distribución y archivado 
de ficheros. 

Git fue diseñado por Torvalds con el proyecto de Linux y el workflow  
de sus desarrolladores en mente y, obviamente, estos fueron los 
primeros en adoptarlo como sistema de control de versiones. 
El modo de funcionamiento distribuido, su eficiencia a la hora de 
trabajar con múltiples ramas y otras operaciones comunes como diffs 
(que en git se ejecutan en un suspiro), dan testimonio de cómo git 
fue diseñado con la intención de gestionar proyectos grandes como el 
kernel sin problemas.

¿ A QUIEN PERTENECE ACTUALMENTE GITHUB Y POR QUE?
GitHUB pertenece actualmente a Microsoft, Con más de 28 millones de 
desarrolladores y más de 85 millones de repositorios, el software más 
popular del mundo. Es también una de las fuentes de código abierto 
más relevantes del panorama, si bien más allá de Git, el software de 
control de versiones (creado por Linus Torvalds) en el que se basa, 
se trata de un servicio privativo.

¿HAY OTRA FORMA QUE NO SEA LA TERMINAL PARA TRABAJAR EN GITHUB?
Podemos acceder por la aplicacion de escritorio o por visual studio code